01. *created the bash2.txt file                            # First create the 'bash2.txt' file where you will add the executed commands
02. cd ~                                                   # Go to your home directory via terminal
03. mkdir test3                                            # Create the 'test3' folder
04. echo -e "row1\nrow2\nrow3\nrow4" > ~/test3/4           # Add three files: '4', '5' and '6' to the 'test 3' folder, each of which should contain 4 lines: row1,                                                               row2, row3, row4
echo -e "row1\nrow2\nrow3\nrow4" > ~/test3/5
echo -e "row1\nrow2\nrow3\nrow4" > ~/test3/6
05. grep "row2" ~/test3/5                                  # Find the line 'row2' in the file '5'
06. grep "row" ~/test3/*                                   # Find the 'row' line in the 'test3' folder
07. grep -c "row" ~/test3/6                                # Count how many lines with the content 'row' in the '6' file
08. find ~/test3 -name "5"                                 # Find the '5' file inside the 'test3' folder
09. find . -name "5" -delete                               # Using the 'find' command delete the '5' file
10. echo "test" > ~/test3/4                                # Using the 'echo' command, add the word 'test' to the '4' file (without saving the contents)
11. sed 's/test/fail/g' ~/test3/4                          # Replace the word 'test' in the '4' file with the word 'fail'
12. echo "test" >> ~/test3/4                               # Add the word 'test' to the '4' file so that the content is preserved
13. ps aux                                                 # View all processes for users not only in the console that occur in the system
    -or-
    tasklist (для Windows)
14. kill 666                                               # Kill the process '666' in console (you don't have to kill it, just write a command)  
    -or-
    taskkill /PID 666 /F (для Windows)          
15. ping rusau.net                                         # Find out the availability of the resource 'rusau.net' using ping
16. ping -c 5 rusau.net                                    # Send 5 packages to the site: rusau.net
17. curl https://petstore.swagger.io/v2/pet                # Using GET and curl command, get information about registered pets with any status at                       /findByStatus?status=available,pending,sold              https://petstore.swagger.io/     
18. curl -X POST "https://petstore.swagger.io/v2/user"     # Using POST and the curl command, create a new user at https://petstore.swagger.io/
    -H "accept: application/json" 
    -H "Content-Type: application/json"
    -d "{\"id\":98765,
    \"username\":\"nat_test_user\",
    \"firstName\":\"Nat\",
    \"lastName\":\"Tester\",
    \"email\":\"nat@example.com\",
    \"password\":\"mySecurePass123\",
    \"phone\":\"123456789\",
    \"userStatus\":1}"
